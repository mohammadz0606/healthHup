<%- include("../partials/head.ejs") %>

<%- include("../partials/navbar.ejs") %>



<style>
    @import url('https://fonts.googleapis.com/css?family=Montserrat:400,800');
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800&display=swap');

* {
	box-sizing: border-box;
}

body {
	background: #f6f5f7;
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
	font-family: 'Montserrat', sans-serif;

}
.navbar-light .navbar-nav .nav-link {
    font-family: 'Jost', sans-serif !important;
    position: relative !important;
    margin-left: 30px !important;
    padding: 10px 0 !important;
    font-size: 18px !important;
    font-weight: 700 !important;
    color: var(--dark) !important;
    outline: none !important;
    transition: .5s !important;
}
.navbar-brand {
    padding: 0PX;

    margin-right: 1rem;
    font-size: 0.25rem;
    white-space: nowrap;
}
h1 {
	font-weight: bold;
	margin: 0;
}

h2 {
	text-align: center;
}

p {
	font-size: 14px;
	font-weight: 100;
	line-height: 20px;
	letter-spacing: 0.5px;
	margin: 20px 0 30px;
}

span {
	font-size: 12px;
}

a {
	color: #333;
	font-size: 14px;
	text-decoration: none;
	margin: 15px 0;
}

button {
	border-radius: 20px;
    border: 1px solid #17194c;
    background-color: #192441;
	color: #FFFFFF;
	font-size: 12px;
	font-weight: bold;
	padding: 12px 45px;
	letter-spacing: 1px;
	text-transform: uppercase;
	transition: transform 80ms ease-in;
}

button:active {
	transform: scale(0.95);
}

button:focus {
	outline: none;
}

button.ghost {
	background-color: transparent;
	border-color: #FFFFFF;
}

form {
	background-color: #FFFFFF;
	display: flex;
	align-items: center;
	justify-content: center;
	flex-direction: column;
	padding: 0 50px;
	height: 100%;
	text-align: center;
}

input {
	background-color: #eee;
	border: none;
	padding: 12px 15px;
	margin: 8px 0;
	width: 100%;
	height: 40px;
}

.container1 {
	background-color: #fff;
	border-radius: 10px;
  	box-shadow: 0 14px 28px rgba(0,0,0,0.25), 
			0 10px 10px rgba(0,0,0,0.22);
	position: relative;
	overflow: hidden;
	width: 768px;
	max-width: 100%;
	min-height: 530px;
}

.form-container {
	position: absolute;
	top: 0;
	height: 100%;
	transition: all 0.6s ease-in-out;
}

.sign-in-container {
	left: 0;
	width: 50%;
	z-index: 2;
}

.container1.right-panel-active .sign-in-container {
	transform: translateX(100%);
}

.sign-up-container {
	left: 0;
	width: 50%;
	opacity: 0;
	z-index: 1;
}

.container1.right-panel-active .sign-up-container {
	transform: translateX(100%);
	opacity: 1;
	z-index: 5;
	animation: show 0.6s;
}

@keyframes show {
	0%, 49.99% {
		opacity: 0;
		z-index: 1;
	}
	
	50%, 100% {
		opacity: 1;
		z-index: 5;
	}
}

.overlay-container {
	position: absolute;
	top: 0;
	left: 50%;
	width: 50%;
	height: 100%;
	overflow: hidden;
	transition: transform 0.6s ease-in-out;
	z-index: 100;
}

.container1.right-panel-active .overlay-container{
	transform: translateX(-100%);
}

.overlay {
	background: linear-gradient(45deg, #2d6fae, #24b4ed, #5567d1) !important;
	background-repeat: no-repeat;
	background-size: cover;
	background-position: 0 0;
	color: #FFFFFF;
	position: relative;
	left: -100%;
	height: 100%;
	width: 200%;
  	transform: translateX(0);
	transition: transform 0.6s ease-in-out;
}

.container1.right-panel-active .overlay {
  	transform: translateX(50%);
}

.overlay-panel {
	position: absolute;
	display: flex;
	align-items: center;
	justify-content: center;
	flex-direction: column;
	padding: 0 40px;
	text-align: center;
	top: 0;
	height: 100%;
	width: 50%;
	transform: translateX(0);
	transition: transform 0.6s ease-in-out;
}

.overlay-left {
	transform: translateX(-20%);
}

.container1.right-panel-active .overlay-left {
	transform: translateX(0);
}

.overlay-right {
	right: 0;
	transform: translateX(0);
}

.container1.right-panel-active .overlay-right {
	transform: translateX(20%);
}

.social-container {
	margin: 20px 0;
}

.social-container a {
	border: 1px solid #DDDDDD;
	border-radius: 50%;
	display: inline-flex;
	justify-content: center;
	align-items: center;
	margin: 0 5px;
	height: 40px;
	width: 40px;
}

footer {
    background-color: #222;
    color: #fff;
    font-size: 14px;
    bottom: 0;
    position: fixed;
    left: 0;
    right: 0;
    text-align: center;
    z-index: 999;
}

footer p {
    margin: 10px 0;
}

footer i {
    color: red;
}

footer a {
    color: #3c97bf;
    text-decoration: none;
}



.password-container {
		position: relative;
		width: 100%;
	}
	.toggle-password {
		position: absolute;
		right: 20px;
		top: 20px;
		cursor: pointer;
		color: #192441;
	}

	input:focus-visible {
		outline: none !important;
	}
</style>


<div class="container1 mt-5" id="container">
	<div class="form-container sign-up-container" id="signUp signUp1">
		<form action="/register" method="POST" id="registrationForm">
			<h2>Create Account</h2>

			<span>Use your email for registration</span>
			<input type="text" required name="name"  placeholder="Name" />
			<input type="email" required name="email"  placeholder="Email" />
            <input type="text" required name="phoneNumber" minlength="13" maxlength="14" value="00962" placeholder="00962 000000000"  >
            <div class=" w-100 d-flex justify-content-between align-items-center">
                <div class="">
                    <input type="number" name="age"  id="age" required min="0" max="110" placeholder="Age" style="margin-right: 20px;"/>
                </div>
           
            
            <select class="form-select rounded-0 border-0" required name="gender" style="height: 40px; max-width: 150px; background-color:#eee; box-shadow: none;">
                <option value="" selected hidden>Gender</option>
                <option  value="male">Male</option>
                <option value="female">Female</option>
            </select>
        </div>
			<input type="password" minlength="8"  required name="password" placeholder="Password" id="password"
            pattern="(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}" 
            title="Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one number, and one special character."
            />
            <input type="password" minlength="8"  required name="confirmPassword" placeholder="Confirm Password" id="confirmPassword" />
            <p class="my-1" id="error-message" style="color:red; display:none;">Passwords do not match.</p>
			<button class="mt-3" type="submit">Sign Up</button>
		</form>
	</div>


	<div class="form-container sign-in-container" id="signIn signIn1">
		<form action="/login" method="post">
			<h1>Sign in</h1>

			<span>or use your account</span>
			<input type="email" required name="username" placeholder="Email" />
			<!-- <input type="password" required  name="password" placeholder="Password" /> -->
			<div class="password-container d-flex align-items-center">
				<input type="password" required name="password" placeholder="Password" id="password1" />
				<span class="toggle-password">
					<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eye-fill" viewBox="0 0 16 16">
						<path d="M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0"/>
						<path d="M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8m8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7"/>
					  </svg>
				</span>
			</div>
	
			<!-- <input type="password" required minlength="8" name="password" placeholder="Password" /> -->

		
			<button>Sign In</button>
		</form>
	</div>
	<div class="overlay-container">
		<div class="overlay">
			<div class="overlay-panel overlay-left">
				<h1>Welcome Back!</h1>
				<p>To keep connected with us please login with your personal info</p>
				<button class="ghost" id="signIn">Sign In</button>
			</div>
			<div class="overlay-panel overlay-right">
				<h1>Hello, Friend!</h1>
				<p>Enter your personal details and start journey with us</p>
				<button class="ghost" id="signUp">Sign Up</button>
			</div>
		</div>
	</div>
</div>

<script>
	$(document).ready(function() {
		$('.toggle-password').on('click', function() {
			let passwordField = $('#password1');
			let type = passwordField.attr('type') === 'password' ? 'text' : 'password';
			passwordField.attr('type', type);
			$(this).html(type === 'password' ? 
			`
			<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eye-fill" viewBox="0 0 16 16">
  <path d="M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0"/>
  <path d="M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8m8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7"/>
</svg>
			
			` : 
			`
			<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eye-slash-fill" viewBox="0 0 16 16">
  <path d="m10.79 12.912-1.614-1.615a3.5 3.5 0 0 1-4.474-4.474l-2.06-2.06C.938 6.278 0 8 0 8s3 5.5 8 5.5a7 7 0 0 0 2.79-.588M5.21 3.088A7 7 0 0 1 8 2.5c5 0 8 5.5 8 5.5s-.939 1.721-2.641 3.238l-2.062-2.062a3.5 3.5 0 0 0-4.474-4.474z"/>
  <path d="M5.525 7.646a2.5 2.5 0 0 0 2.829 2.829zm4.95.708-2.829-2.83a2.5 2.5 0 0 1 2.829 2.829zm3.171 6-12-12 .708-.708 12 12z"/>
</svg>
			`);
		});
	});
</script>


<script>



    $(document).ready(() => {
        console.log("ready");


        $("#age").on("input", () => {
            if(Number($("#age").val()) < 0) {
                $("#age").val(1)
            } else if(Number($("#age").val()) > 110) {
				$("#age").val(110)
			}
            
        })

        $('#registrationForm').on('submit', function(event) {
                const password = $('#password').val();
                const confirmPassword = $('#confirmPassword').val();
                const errorMessage = $('#error-message');

                if (password !== confirmPassword) {
                    errorMessage.show();
                    event.preventDefault(); // Prevent form submission
                } else {
                    errorMessage.hide();
                }
        });
    })


    // Step 1: Get the query string from the URL
    const queryString = window.location.search;

    // Step 2: Parse the query string using URLSearchParams
    const urlParams = new URLSearchParams(queryString);

    // Step 3: Get the value of the 'active' parameter
    const activeParam = urlParams.get('active');

    // DOM elements
    const container = document.getElementById('container');
    const signUpButton = document.getElementById('signUp');
    const signInButton = document.getElementById('signIn');

    // Step 4: Make conditions based on the 'active' parameter value
    if (activeParam === 'register') {
        // Logic for when the 'active' parameter is 'register'
        container.classList.add("right-panel-active");
    } else {
        // Logic for when the 'active' parameter is 'login' or missing
        container.classList.remove("right-panel-active");
    }

    // Event listeners for buttons
    signUpButton.addEventListener('click', () => {
        container.classList.add("right-panel-active");
    });

    signInButton.addEventListener('click', () => {
        container.classList.remove("right-panel-active");
    });
</script>




<!-- <script>
   
   const signUpButton1 = document.getElementById('signUp');
const signInButton1 = document.getElementById('signIn');
const container1 = document.getElementById('container');






   // Step 1: Get the query string from the URL
const queryString = window.location.search;

// Step 2: Parse the query string using URLSearchParams
const urlParams = new URLSearchParams(queryString);

// Step 3: Get the value of the 'active' parameter
const activeParam = urlParams.get('active');

// Step 4: Make conditions based on the 'active' parameter value
if (activeParam === 'register') {
    // Logic for when the 'active' parameter is 'register'
    signUpButton1.addEventListener('click', () => {
	container1.classList.add("right-panel-active");
});
    // Add your code to show the register form
} else if (activeParam === 'login') {
    // Logic for when the 'active' parameter is 'login'
    signInButton1.addEventListener('click', () => {
	container1.classList.remove("right-panel-active");
});
    // Add your code to show the login form
} else {
    // Logic for when the 'active' parameter is missing or has an unexpected value
    signInButton1.addEventListener('click', () => {
	container1.classList.remove("right-panel-active");
});
    // Add your code for the default case
}

    
</script>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
    crossorigin="anonymous"></script>
-->
<script>
    const signUpButton1 = document.getElementById('signUp1');
const signInButton1 = document.getElementById('signIn1');
const container1 = document.getElementById('container');

signUpButton1.addEventListener('click', () => {
	container1.classList.add("right-panel-active");
});

signInButton1.addEventListener('click', () => {
	container1.classList.remove("right-panel-active");
});

</script> 



    
    <%- include("../partials/foot.ejs") %>